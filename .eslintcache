[{"D:\\Jordão\\Documents\\rocketseat\\GoStack\\meusProjetos\\notion\\src\\App.tsx":"1","D:\\Jordão\\Documents\\rocketseat\\GoStack\\meusProjetos\\notion\\src\\pages\\Home\\index.tsx":"2","D:\\Jordão\\Documents\\rocketseat\\GoStack\\meusProjetos\\notion\\src\\pages\\Home\\styles.ts":"3","D:\\Jordão\\Documents\\rocketseat\\GoStack\\meusProjetos\\notion\\src\\index.tsx":"4","D:\\Jordão\\Documents\\rocketseat\\GoStack\\meusProjetos\\notion\\src\\styles\\global.ts":"5","D:\\Jordão\\Documents\\rocketseat\\GoStack\\meusProjetos\\notion\\src\\components\\Note\\index.tsx":"6","D:\\Jordão\\Documents\\rocketseat\\GoStack\\meusProjetos\\notion\\src\\components\\Note\\styles.ts":"7","D:\\Jordão\\Documents\\rocketseat\\GoStack\\meusProjetos\\notion\\src\\hooks\\notes.tsx":"8"},{"size":306,"mtime":1610386918399,"results":"9","hashOfConfig":"10"},{"size":3692,"mtime":1610392304427,"results":"11","hashOfConfig":"10"},{"size":4158,"mtime":1610389952943,"results":"12","hashOfConfig":"10"},{"size":197,"mtime":1610222239281,"results":"13","hashOfConfig":"10"},{"size":724,"mtime":1610389584810,"results":"14","hashOfConfig":"10"},{"size":2861,"mtime":1610391250188,"results":"15","hashOfConfig":"10"},{"size":2255,"mtime":1610385185442,"results":"16","hashOfConfig":"10"},{"size":2216,"mtime":1610392860777,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v0qae3",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Jordão\\Documents\\rocketseat\\GoStack\\meusProjetos\\notion\\src\\App.tsx",[],"D:\\Jordão\\Documents\\rocketseat\\GoStack\\meusProjetos\\notion\\src\\pages\\Home\\index.tsx",["35","36"],"import React, { useCallback, useState } from 'react';\r\nimport notion from '../../assets/notion.jpg';\r\nimport { FiArrowDownCircle, FiDelete } from 'react-icons/fi';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport { FiEdit2 } from 'react-icons/fi';\r\n\r\n\r\nimport { BodyNote, ButtonAddNote, ButtonNavigateBottom, CardNote, Container, Content, ContentContainer, DeleteButton, EdditButton, FooterNote, HeaderNote, ListNotes, NewNote, NotionFlexDiv, NotionImage, NotionText } from './styles';\r\nimport { Scroll } from 'framer';\r\nimport Note from '../../components/Note';\r\nimport { useNote } from '../../hooks/notes';\r\n\r\nconst Home: React.FC = () => {\r\n\r\n    const { setShowNote, showNote, listNote, setEdditNoteState, deleteNote } = useNote();\r\n\r\n    const notes = listNote();\r\n\r\n    const handleEdditShow = useCallback((index: number, title: string, body: string) => {\r\n        setShowNote(true)\r\n        setEdditNoteState({\r\n            id: index,\r\n            title,\r\n            body,\r\n        })\r\n\r\n    }, [showNote])\r\n\r\n    return (\r\n\r\n        <>\r\n            <Scroll width={'100vw'} height={'100vh'} dragEnabled={false}>\r\n                <Container>\r\n                    <NotionFlexDiv>\r\n                        <NotionText>\r\n                            <h1>Your Notes</h1>\r\n                            <ButtonNavigateBottom>\r\n                                <FiArrowDownCircle size={20} />\r\n                                <p>Start rigth now</p>\r\n                            </ButtonNavigateBottom>\r\n                        </NotionText>\r\n                        <NotionImage>\r\n                            <img src={notion} alt=\"vector notes\" />\r\n                            <a href='https://www.freepik.com/vectors/business'>Business vector created by jcomp - www.freepik.com</a>\r\n                        </NotionImage>\r\n                    </NotionFlexDiv>\r\n                </Container>\r\n\r\n                <ContentContainer>\r\n                    <Content>\r\n                        <NewNote>\r\n                            <ButtonAddNote onClick={() => setShowNote(true)}>\r\n                                <MdAdd size={20} />\r\n                                <p>Add Note</p>\r\n                            </ButtonAddNote>\r\n                            <Note showNote={showNote} />\r\n                        </NewNote>\r\n                        <ListNotes>\r\n                            {notes.map((note, index) => (\r\n                                <CardNote>\r\n                                    <HeaderNote>\r\n                                        {note.title}\r\n                                    </HeaderNote>\r\n                                    <BodyNote>\r\n                                        {note.body}\r\n                                    </BodyNote>\r\n                                    <FooterNote>\r\n                                        <EdditButton onClick={() => handleEdditShow(index, note.title, note.body)}>\r\n                                            <FiEdit2 size={20} />\r\n                                            <p>Editar</p>\r\n                                        </EdditButton>\r\n                                        <DeleteButton onClick={() => deleteNote(index)}>\r\n                                            <FiDelete size={20} />\r\n                                            <p>Deletar</p>\r\n                                        </DeleteButton>\r\n                                    </FooterNote>\r\n                                </CardNote>\r\n                            ))}\r\n                        </ListNotes>\r\n                    </Content>\r\n                </ContentContainer>\r\n            </Scroll>\r\n        </>\r\n\r\n\r\n\r\n    )\r\n}\r\nexport default Home;","D:\\Jordão\\Documents\\rocketseat\\GoStack\\meusProjetos\\notion\\src\\pages\\Home\\styles.ts",[],"D:\\Jordão\\Documents\\rocketseat\\GoStack\\meusProjetos\\notion\\src\\index.tsx",[],"D:\\Jordão\\Documents\\rocketseat\\GoStack\\meusProjetos\\notion\\src\\styles\\global.ts",[],"D:\\Jordão\\Documents\\rocketseat\\GoStack\\meusProjetos\\notion\\src\\components\\Note\\index.tsx",["37"],"D:\\Jordão\\Documents\\rocketseat\\GoStack\\meusProjetos\\notion\\src\\components\\Note\\styles.ts",[],"D:\\Jordão\\Documents\\rocketseat\\GoStack\\meusProjetos\\notion\\src\\hooks\\notes.tsx",[],{"ruleId":"38","severity":1,"message":"39","line":1,"column":30,"nodeType":"40","messageId":"41","endLine":1,"endColumn":38},{"ruleId":"42","severity":1,"message":"43","line":27,"column":8,"nodeType":"44","endLine":27,"endColumn":18,"suggestions":"45"},{"ruleId":"38","severity":1,"message":"46","line":1,"column":17,"nodeType":"40","messageId":"41","endLine":1,"endColumn":28},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'setEdditNoteState' and 'setShowNote'. Either include them or remove the dependency array.","ArrayExpression",["47"],"'useCallback' is defined but never used.",{"desc":"48","fix":"49"},"Update the dependencies array to be: [setEdditNoteState, setShowNote]",{"range":"50","text":"51"},[1003,1013],"[setEdditNoteState, setShowNote]"]